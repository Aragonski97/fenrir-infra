# AIRFLOW__CORE__ENABLE_XCOM_PICKLING=https://github.com/apache/airflow/issues/13487

version: "3"
services:
  webserver:
    image: apache/airflow:latest
    hostname: webserver
    volumes:
      - $FENRIR_ROOT_DIR/airflow/volumes/webserver/dags:/opt/airflow/dags
      - $FENRIR_ROOT_DIR/airflow/volumes/webserver/logs:/opt/airflow/logs
      - $FENRIR_ROOT_DIR/airflow/volumes/webserver/templates:/opt/airflow/templates
    env_file:
      - $FENRIR_ROOT_DIR/airflow/airflow.env
    command: webserver
    ports:
      - target: 8080
        published: 10040
        mode: host
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.airflow == true
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 5s
        window: 120s
      update_config:
        order: start-first
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 5s
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - internal_network

  scheduler:
    image: apache/airflow:latest
    hostname: scheduler
    volumes:
      - $FENRIR_ROOT_DIR/airflow/volumes/scheduler/dags:/opt/airflow/dags
      - $FENRIR_ROOT_DIR/airflow/volumes/scheduler/logs:/opt/airflow/logs
      - $FENRIR_ROOT_DIR/airflow/volumes/scheduler/templates:/opt/airflow/templates
    env_file:
      - $FENRIR_ROOT_DIR/airflow/airflow.env
    command: scheduler
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.airflow == true
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 5s
        window: 120s
      update_config:
        order: start-first
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 5s
    healthcheck:
      test: ["CMD-SHELL", 'curl --silent http://webserver:8080/health | grep -A 1 scheduler | grep \"healthy\"']
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - internal_network

  airflow-init:
    image: apache/airflow:latest
    hostname: airflow-init
    env_file:
      - $FENRIR_ROOT_DIR/airflow/airflow.env
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db migrade &&
        airflow users list || (
        airflow users create \
          -r Admin \
          -u ${AIRFLOW_ADMIN_USERNAME} \
          -p ${AIRFLOW_ADMIN_PASSWORD} \
          -e ${AIRFLOW_ADMIN_EMAIL} \
          -f ${AIRFLOW_ADMIN_FIRST_NAME} \
          -l ${AIRFLOW_ADMIN_LAST_NAME}
        )
    user: root
    privileged: true
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.airflow == true
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 5s
        window: 120s
      update_config:
        order: start-first
        parallelism: 1
        delay: 5s
        failure_action: rollback
        monitor: 5s
    networks:
      - internal_network

networks:
  internal_network:
    name: $FENRIR_DOCKER_NETWORK
    driver: overlay
    attachable: true
    external: true
